<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Multi-target .NET 6.0 (LTS), .NET 7.0, and .NET 8.0 (LTS) -->
    <TargetFrameworks>net6.0;net7.0;net8.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageId>Fluid.OpenVINO.GenAI</PackageId>
    <Authors>FluidInference</Authors>
    <Company>FluidInference</Company>
    <Product>Fluid.OpenVINO.GenAI</Product>
    <Description>Community-maintained C# wrapper for OpenVINO GenAI, providing idiomatic .NET APIs for LLM inference. Includes async/await support, streaming generation, and automatic native library management.</Description>
    <PackageProjectUrl>https://github.com/FluidInference/OpenVINO.GenAI.NET</PackageProjectUrl>
    <RepositoryUrl>https://github.com/FluidInference/OpenVINO.GenAI.NET</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>openvino;ai;inference;llm;genai;machine-learning;deep-learning;neural-networks;text-generation;whisper;speech-to-text</PackageTags>
    <AssemblyVersion>2025.3.0.0</AssemblyVersion>
    <FileVersion>2025.3.0.0</FileVersion>
    <Version>2025.3.0.1</Version>
    <Platforms>x64</Platforms>
    <PlatformTarget>x64</PlatformTarget>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
    <PackageReleaseNotes>
      Fluid.OpenVINO.GenAI 2025.3.0.1
      
      Community-maintained C# wrapper for OpenVINO GenAI.
      
      IMPORTANT FIX:
      - Fixed NuGet package native library bundling and MSBuild targets
      - Native libraries now properly deploy on both Windows and Linux
      - Added multi-targeting for .NET 6.0, 7.0, and 8.0
      
      Requirements:
      - .NET 6.0, 7.0, or 8.0
      - Windows x64 or Linux x64
      - OpenVINO GenAI 2025.3.0.0.dev20250801 runtime (included)
      
      Features:
      - LLM Pipeline with streaming support (IAsyncEnumerable)
      - Whisper Pipeline for speech-to-text
      - Fluent configuration API
      - Automatic native library management via MSBuild targets
      - SafeHandle resource management
      
      Changes in 2025.3.0.1:
      - Fixed MSBuild targets to correctly resolve native libraries from NuGet package
      - Added support for .NET 6.0 and 7.0 (previously only .NET 8.0)
      - Improved error messages for missing native libraries
      - Added comprehensive troubleshooting documentation
      - All 27 OpenVINO native libraries now properly included for Windows
      - Linux native libraries included for Ubuntu 24.04
    </PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Memory" Version="4.5.5" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
    <PackageReference Include="System.Threading.Channels" Version="9.0.8" />
  </ItemGroup>


  <!-- Windows native libraries for NuGet package and local output -->
  <ItemGroup Condition="Exists('..\..\build\native\runtimes\win-x64\native')">
    <Content Include="..\..\build\native\runtimes\win-x64\native\*.dll">
      <PackagePath>runtimes\win-x64\native\%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <PackageCopyToOutput>false</PackageCopyToOutput>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>runtimes\win-x64\native\%(Filename)%(Extension)</Link>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>
  
  <!-- Linux native libraries for NuGet package and local output -->
  <ItemGroup Condition="Exists('..\..\build\native\runtimes\linux-x64\native')">
    <Content Include="..\..\build\native\runtimes\linux-x64\native\*.so*">
      <PackagePath>runtimes/linux-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <PackageCopyToOutput>false</PackageCopyToOutput>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>runtimes/linux-x64/native/%(Filename)%(Extension)</Link>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>

  <!-- Copy native libraries to output directory for development/testing -->
  <Target Name="CopyNativeLibraries" BeforeTargets="Build">
    <!-- First try environment variable path (CI/CD) -->
    <PropertyGroup>
      <RuntimePath Condition="'$(OPENVINO_RUNTIME_PATH)' != ''">$(OPENVINO_RUNTIME_PATH)</RuntimePath>
    </PropertyGroup>
    
    <!-- Windows -->
    <ItemGroup Condition="'$(OS)' == 'Windows_NT' AND '$(RuntimePath)' != '' AND Exists('$(RuntimePath)')">
      <WindowsNativeLibs Include="$(RuntimePath)\*.dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(OS)' == 'Windows_NT' AND '@(WindowsNativeLibs)' == '' AND Exists('..\..\build\native\runtimes\win-x64\native')">
      <WindowsNativeLibs Include="..\..\build\native\runtimes\win-x64\native\*.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(WindowsNativeLibs)" 
          DestinationFolder="$(OutputPath)" 
          SkipUnchangedFiles="true"
          Condition="'$(OS)' == 'Windows_NT' AND '@(WindowsNativeLibs)' != ''" />
    <Message Text="Copied Windows native libraries to $(OutputPath)" 
             Importance="high" 
             Condition="'$(OS)' == 'Windows_NT' AND '@(WindowsNativeLibs)' != ''" />
    
    <!-- Linux -->
    <ItemGroup Condition="'$(OS)' != 'Windows_NT' AND '$(RuntimePath)' != '' AND Exists('$(RuntimePath)')">
      <LinuxNativeLibs Include="$(RuntimePath)/*.so*" />
    </ItemGroup>
    <ItemGroup Condition="'$(OS)' != 'Windows_NT' AND '@(LinuxNativeLibs)' == '' AND Exists('../../build/native/runtimes/linux-x64/native')">
      <LinuxNativeLibs Include="../../build/native/runtimes/linux-x64/native/*.so*" />
    </ItemGroup>
    <Copy SourceFiles="@(LinuxNativeLibs)" 
          DestinationFolder="$(OutputPath)" 
          SkipUnchangedFiles="true"
          Condition="'$(OS)' != 'Windows_NT' AND '@(LinuxNativeLibs)' != ''" />
    <Message Text="Copied Linux native libraries to $(OutputPath)" 
             Importance="high" 
             Condition="'$(OS)' != 'Windows_NT' AND '@(LinuxNativeLibs)' != ''" />
  </Target>

  <!-- Include MSBuild targets in NuGet package -->
  <ItemGroup>
    <Content Include="Fluid.OpenVINO.GenAI.targets">
      <PackagePath>build\Fluid.OpenVINO.GenAI.targets</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>

  <!-- Include README in NuGet package -->
  <ItemGroup>
    <None Include="..\..\README.md">
      <PackagePath>README.md</PackagePath>
      <Pack>true</Pack>
    </None>
  </ItemGroup>

  <!-- Only import targets if this is NOT the project that defines them -->
  <!-- Remove this line if OpenVINO.NET.GenAI.targets is defined in this same project -->
  <!-- <Import Project="OpenVINO.NET.GenAI.targets" /> -->

</Project>